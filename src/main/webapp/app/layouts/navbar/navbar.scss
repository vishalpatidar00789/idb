@import '~bootstrap/scss/functions';
@import '~bootstrap/scss/variables';

/* ==========================================================================
Navbar
========================================================================== */
// @media (min-width: 768px) {
//     .sidenav {
//         display: none;
//     }
// }
// .hidden {
//     display: none;
// }
// .example-container {
//     display: flex;
//     flex-direction: column;
//     position: absolute;
//     top: 0;
//     bottom: 0;
//     left: 0;
//     right: 0;
//   }
//   .sidenav-container {
//       height: 100%;
//   }

//   .sidenav {
//       width: 200px;
//       box-shadow: 3px 0 6px rgba(0,0,0,.24);
//   }

/* 2. Then use it like this in you component scss */

.square {
    float: left;
    margin: 1pt;
    width: 72pt;
    height: 72pt;
}
.container {
    text-align: center;
    width: 450pt;
    height: 80pt;
}
.centerwrapper {
    margin: auto;
    width: 302pt;
}
.account {
    padding: 10px;
    border-bottom: 2px solid gray;
    margin: 0 auto;
}
.avatar {
    vertical-align: middle;
    width: 50px;
    height: 50px;
    border-radius: 50%;
    background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');
}

.example-header-image {
    background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');
    background-size: cover;
}
.example-container {
    display: flex;
    flex-direction: column;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
}

.example-is-mobile .example-toolbar {
    position: fixed;
    /* Make sure the toolbar will stay on top of the content as it scrolls past. */
    z-index: 2;
}

h1.example-app-name {
    margin-left: 8px;
}

.example-sidenav-container {
    /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This
       causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */
    flex: 1;
}

.example-is-mobile .example-sidenav-container {
    /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the
       `<body>` to be our scrolling element for mobile layouts. */
    flex: 1 0 auto;
}

.example-events {
    width: 300px;
    height: 200px;
    overflow: auto;
    border: 1px solid #555;
}

// .navbar-version {
//     font-size: 0.65em;
//     color: $navbar-dark-color;
// }

// .profile-image {
//     height: 1.75em;
//     width: 1.75em;
// }

// .navbar {
//     padding: 0.2rem 1rem;
//     .dropdown-item.active,
//     .dropdown-item.active:focus,
//     .dropdown-item.active:hover {
//         background-color: $dark;
//     }

//     ul.navbar-nav {
//         .nav-item {
//             margin-left: 0.5em;
//         }
//     }

//     a.nav-link {
//         font-weight: 400;
//     }

//     .navbar-toggler {
//         &:hover {
//             color: $navbar-dark-hover-color;
//         }
//     }
// }

/* ==========================================================================
Logo styles
========================================================================== */
.logo-img {
    height: 45px;
    width: 45px;
    display: inline-block;
    vertical-align: middle;
    background: url('../../../content/images/logo-jhipster.png') no-repeat center center;
    background-size: contain;
}
