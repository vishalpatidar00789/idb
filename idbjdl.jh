
entity User {
	id String required, // primary key
	email String required, // unique key
    password String, // required in case paid user
    activated Boolean,
    profile Profile,
    accessToken String,
    sessionToken String,
    lastLoginDate LocalDate,
    lastDeactivatedDate LocalDate,
    account Account,
    roles Roles,
    verified Boolean,
    verificationMethod String,
    isReportedScam Boolean,
    lastLogout LocalDate,
    lastActivatedDate LocalDate,
    createdDate LocalDate,
    createdBy String,
    lastUpdatedDate LocalDate,
    lastUpdatedBy String
}
enum Roles {
	ADMIN, USER, SUPERADMIN
}
entity Profile {
	id String required,
    screenName String,
    profilePic Blob,
    gender String required, // required
    age Integer required,
    country String required, // default India
    state String,
    city String required,
    pincode String,
    personality Personalities,
    interests Interests,
    offersings Offerings,
    status ProfileStatus,
    createdDate LocalDate,
    createdBy String,
    lastUpdatedDate LocalDate,
    lastUpdatedBy String
}

entity Settings {
	id String required,
    key String required,
    isPublic Boolean required,
    profile Profile,
    createdDate LocalDate,
    createdBy String,
    lastUpdatedDate LocalDate,
    lastUpdatedBy String
}

entity Photos {
	id String required,
    image Blob,
    profile Profile,
    createdDate LocalDate,
    createdBy String,
    lastUpdatedDate LocalDate,
    lastUpdatedBy String
}

enum Personalities {
	Introvert, Extrovert, Thinker, Romantic, Observer, Cool, Helping
}
enum Interests {
	Travelling, Reading, Parties, Movies, Music, Sports, Fitness 
}
enum ProfileStatus {
	Dating, Waiting, BlindDate, Offline
}
enum Offerings {
	BlindDate, ShortDate, Hookups, CasualRelationships, Chat, VideoChat
}
entity Account {
	id String required,
    remainingChapters Integer required,
    currentPackage Package required,
    currPackageStartDate LocalDate required,
    currPackageEndDate LocalDate required,
    userDiscount Integer,
    activated String required,
    accountType AccountType required,
    chapters Chapters,
    perDayChapterLimit Integer required,
    createdDate LocalDate,
    createdBy String,
    lastUpdatedDate LocalDate,
    lastUpdatedBy String
}

enum AccountType {
	Paid, Free, Hold
}
entity Packages {
	id String required,
    title String required,
    price Integer required,
    type String required,
    expiry Integer required,
    totalChapters Integer required,
    discount Integer,
    activated String required,
    createdDate LocalDate,
    createdBy String,
    lastUpdatedDate LocalDate,
    lastUpdatedBy String
}

entity Chapters {
	id String required,
    initiator User required,
    partner User required,
    status ChapterStatus,
    activated String required,
	createdDate LocalDate,
    createdBy String,
    lastUpdatedDate LocalDate,
    lastUpdatedBy String
}

enum ChapterStatus {
	Open, Accepted, Started, Hold, Close
}
entity Payments {
	id String required,
	account Account required,
    package Packages required,
    vendor String required,
    status PaymentStatus required,
    paymentValue Integer required,
    initiatedDate LocalDate,
    confirmDate LocalDate,
    activated Boolean // status is represented by activated flag
    createdDate LocalDate,
    createdBy String,
    lastUpdatedDate LocalDate,
    lastUpdatedBy String
}

enum PaymentStatus {
	Paid, Failed, Hold
}

relationship OneToOne {
	User{profile} to Profile,
    User{account} to Account,
    Account{package} to Packages,
    Payments{account} to Account,
    Payments{package} to Packages
}

relationship OneToMany {
    Account{chapters} to Chapters,
    Profile{pics} to Photos,
    Profile{settings} to Settings
}
// Set pagination options
paginate * with infinite-scroll
paginate * with pagination

dto * with mapstruct

// Set service options to all except few
service all with serviceImpl

